"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _core = require("@redux-devtools/core");
var _LogMonitorButton = _interopRequireDefault(require("./LogMonitorButton"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// eslint-disable-next-line @typescript-eslint/unbound-method
const {
  reset,
  rollback,
  commit,
  sweep
} = _core.ActionCreators;
const style = {
  textAlign: 'center',
  borderBottomWidth: 1,
  borderBottomStyle: 'solid',
  borderColor: 'transparent',
  zIndex: 1,
  display: 'flex',
  flexDirection: 'row'
};
class LogMonitorButtonBar extends _react.PureComponent {
  constructor() {
    super(...arguments);
    (0, _defineProperty2.default)(this, "handleRollback", () => {
      this.props.dispatch(rollback());
    });
    (0, _defineProperty2.default)(this, "handleSweep", () => {
      this.props.dispatch(sweep());
    });
    (0, _defineProperty2.default)(this, "handleCommit", () => {
      this.props.dispatch(commit());
    });
    (0, _defineProperty2.default)(this, "handleReset", () => {
      this.props.dispatch(reset());
    });
  }
  render() {
    const {
      theme,
      hasStates,
      hasSkippedActions
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      style: {
        ...style,
        borderColor: theme.base02
      }
    }, /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
      theme: theme,
      onClick: this.handleReset,
      enabled: true
    }, "Reset"), /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
      theme: theme,
      onClick: this.handleRollback,
      enabled: hasStates
    }, "Revert"), /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
      theme: theme,
      onClick: this.handleSweep,
      enabled: hasSkippedActions
    }, "Sweep"), /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
      theme: theme,
      onClick: this.handleCommit,
      enabled: hasStates
    }, "Commit"));
  }
}
exports.default = LogMonitorButtonBar;
(0, _defineProperty2.default)(LogMonitorButtonBar, "propTypes", {
  dispatch: _propTypes.default.func,
  theme: _propTypes.default.object
});