"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _brighten = _interopRequireDefault(require("./brighten"));
const styles = {
  base: {
    cursor: 'pointer',
    fontWeight: 'bold',
    borderRadius: 3,
    padding: 4,
    marginLeft: 3,
    marginRight: 3,
    marginTop: 5,
    marginBottom: 5,
    flexGrow: 1,
    display: 'inline-block',
    fontSize: '0.8em',
    color: 'white',
    textDecoration: 'none'
  }
};
class LogMonitorButton extends _react.default.PureComponent {
  constructor() {
    super(...arguments);
    (0, _defineProperty2.default)(this, "state", {
      hovered: false,
      active: false
    });
    (0, _defineProperty2.default)(this, "handleMouseEnter", () => {
      this.setState({
        hovered: true
      });
    });
    (0, _defineProperty2.default)(this, "handleMouseLeave", () => {
      this.setState({
        hovered: false
      });
    });
    (0, _defineProperty2.default)(this, "handleMouseDown", () => {
      this.setState({
        active: true
      });
    });
    (0, _defineProperty2.default)(this, "handleMouseUp", () => {
      this.setState({
        active: false
      });
    });
    (0, _defineProperty2.default)(this, "onClick", () => {
      if (!this.props.enabled) {
        return;
      }
      if (this.props.onClick) {
        this.props.onClick();
      }
    });
  }
  render() {
    let style = {
      ...styles.base,
      backgroundColor: this.props.theme.base02
    };
    if (this.props.enabled && this.state.hovered) {
      style = {
        ...style,
        backgroundColor: (0, _brighten.default)(this.props.theme.base02, 0.2)
      };
    }
    if (!this.props.enabled) {
      style = {
        ...style,
        opacity: 0.2,
        cursor: 'text',
        backgroundColor: 'transparent'
      };
    }
    return /*#__PURE__*/_react.default.createElement("a", {
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      onMouseDown: this.handleMouseDown,
      onMouseUp: this.handleMouseUp,
      onClick: this.onClick,
      style: style
    }, this.props.children);
  }
}
exports.default = LogMonitorButton;