{"ast":null,"code":"var _jsxFileName = \"/Users/enizumi/Desktop/MERN Project/client/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n//import useStyles from \"./styles\";\nimport { styles } from './styles';\nimport { TextField, Button, Typography, Paper } from \"@mui/material\";\nimport FileBase64 from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n  var _user$result3;\n  //const classes = useStyles();\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      var _user$result;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n    clear();\n  };\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      style: styles.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create your own memories and like other's memories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: styles.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      style: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Massage\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase64, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({\n            ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: styles.buttonSubmit,\n        variant: \"container\",\n        color: \"primay\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"JnPz8sSC8gFh7RjwhC47+4MXzD4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","styles","TextField","Button","Typography","Paper","FileBase64","useDispatch","useSelector","createPost","updatePost","jsxDEV","_jsxDEV","Form","currentId","setCurrentId","_s","_user$result3","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","_user$result","name","result","_user$result2","clear","style","paper","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","noValidate","form","onSubmit","label","fullWidth","value","onChange","target","split","fileInput","type","multiple","onDone","base64","buttonSubmit","color","size","onClick","_c","$RefreshReg$"],"sources":["/Users/enizumi/Desktop/MERN Project/client/src/components/Form/Form.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n//import useStyles from \"./styles\";\nimport {styles} from './styles';\nimport { TextField, Button, Typography, Paper } from \"@mui/material\";\nimport FileBase64 from 'react-file-base64';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { createPost, updatePost } from \"../../actions/posts\";\n\n\nconst Form = ({currentId, setCurrentId}) => {\n    //const classes = useStyles();\n    const [postData, setPostData] = useState({\n        title:'', message:'', tags:'', selectedFile:''\n    });\n    const post = useSelector((state) => currentId? state.posts.find((p) => p._id === currentId) : null);\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    useEffect( () => {\n        if(post) setPostData(post);\n    }, [post]);\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n        }else{\n            dispatch(createPost({ ...postData, name: user?.result?.name }));\n        }\n        clear();\n    };\n\n    const clear = () => {\n        setCurrentId(0);\n        setPostData({title:'', message:'', tags:'', selectedFile:''});\n    };\n\n    if (!user?.result?.name) {\n        return (\n          <Paper style={styles.paper}>\n            <Typography variant=\"h6\" align=\"center\">\n              Please Sign In to create your own memories and like other's memories.\n            </Typography>\n          </Paper>\n        );\n    }\n\n    return(\n        <Paper style={styles.paper}>\n            <form autoComplete=\"off\" noValidate style={styles.form} onSubmit={handleSubmit}>\n            <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n            <TextField name=\"message\" variant=\"outlined\" label=\"Massage\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}/>\n            <div style={styles.fileInput}>\n                <FileBase64 type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile:base64})}/>\n            </div>\n            <Button style={styles.buttonSubmit} variant=\"container\" color=\"primay\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}