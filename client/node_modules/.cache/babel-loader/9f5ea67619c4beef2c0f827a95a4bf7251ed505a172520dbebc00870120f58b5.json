{"ast":null,"code":"var _jsxFileName = \"/Users/enizumi/Desktop/MERN Project/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from '@mui/material'; //need to fit new package version\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from './actions/posts';\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\nimport memories from './images/memories.jpeg';\n//import useStyles from './styles';\nimport { StyledAppBar, styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //const classes = useStyles();\n  const dispatch = useDispatch();\n  const [currentId, setCurrentId] = useState(null);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(StyledAppBar, {\n      position: \"static\",\n      color: \"inherit\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        align: \"center\",\n        children: \"Memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: memories,\n        alt: \"memories\",\n        height: \"60\",\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-between\",\n          alignItems: \"stretch\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 7,\n            children: /*#__PURE__*/_jsxDEV(Posts, {\n              setCurrentId: setCurrentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              currentId: currentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Z8aDENukcmZ+dfTlD5FMFY9/Tt0=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","AppBar","Typography","Grow","Grid","useDispatch","getPosts","Posts","Form","memories","StyledAppBar","styles","jsxDEV","_jsxDEV","App","_s","dispatch","currentId","setCurrentId","maxWidth","children","position","color","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","height","style","image","in","container","justify","alignItems","spacing","item","xs","sm","_c","$RefreshReg$"],"sources":["/Users/enizumi/Desktop/MERN Project/client/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\"; \nimport {Container, AppBar, Typography, Grow, Grid} from '@mui/material';//need to fit new package version\nimport { useDispatch } from \"react-redux\";\n\nimport {getPosts} from './actions/posts';\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\nimport memories from './images/memories.jpeg';\n//import useStyles from './styles';\nimport { StyledAppBar, styles } from \"./styles\";\n\nconst App = () => {\n    //const classes = useStyles();\n    const dispatch = useDispatch();\n    const [currentId, setCurrentId] = useState(null);\n\n    useEffect( () => {\n        dispatch(getPosts());\n    }, [dispatch])\n\n    return (\n        <Container maxWidth='lg'>\n            <StyledAppBar position=\"static\" color=\"inherit\">\n                <Typography variant=\"h2\" align=\"center\">Memories</Typography>\n                <img src={memories} alt=\"memories\" height=\"60\" style={styles.image}/>\n            </StyledAppBar>\n            <Grow in>\n                <Container>\n                    <Grid container justify=\"space-between\" alignItems={\"stretch\"} spacing={3}>\n                        <Grid item xs={12} sm={7}>\n                            <Posts setCurrentId={setCurrentId}/>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form currentId={currentId}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n        </Container>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}